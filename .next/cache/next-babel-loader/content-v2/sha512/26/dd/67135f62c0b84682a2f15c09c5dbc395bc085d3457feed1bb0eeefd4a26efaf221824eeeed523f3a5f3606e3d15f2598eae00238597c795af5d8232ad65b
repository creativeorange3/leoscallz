{"ast":null,"code":"import { request, gql } from 'graphql-request';\nconst graphqlApi = process.env.NEXT_PUBLIC_GRAPHCMS_ENDPOINT;\nexport const getToken = async () => {\n  const query = gql`\n    query TokenQuery {\n        tokensConnection {\n          edges {\n            node {\n              id\n              buyTax\n              buyTokenomics\n              contract\n              decimals\n              description\n              extraLinks\n              slug\n              name\n              sellTax\n              sellTokenomics\n              telegram\n              ticker\n              totalSupply\n              twitter\n              tokenImage {\n                url\n              }\n              tokenLogo {\n                url\n              }\n              catchPhrase\n              isHot\n              isMain\n              isTrending\n              isLaunched\n            }\n          }\n        }\n      }\n         \n    `;\n  const results = await request(graphqlApi, query);\n  return results.tokensConnection.edges;\n};\nexport const getTokenInfo = async slug => {\n  const query = gql`\n    query GetTokenInfo($slug: String!) {\n        token(where: {slug: $slug}) {\n          id\n          buyTax\n          buyTokenomics\n          contract\n          decimals\n          description\n          extraLinks\n          slug\n          name\n          sellTax\n          sellTokenomics\n          telegram\n          ticker\n          totalSupply\n          twitter\n          tokenImage {\n            url\n          }\n          tokenLogo {\n            url\n          }\n          catchPhrase\n          isHot\n          isMain\n          isTrending\n          isLaunched\n        }\n      }\n         \n    `;\n  const results = await request(graphqlApi, query, {\n    slug\n  });\n  return results.token;\n};","map":null,"metadata":{},"sourceType":"module"}