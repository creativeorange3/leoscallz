{"ast":null,"code":"import { request, gql } from 'graphql-request';\nconst graphqlApi = process.env.NEXT_PUBLIC_GRAPHCMS_ENDPOINT;\nexport const getToken = async () => {\n  const query = gql`\n    query TokenQuery {\n        tokensConnection {\n          edges {\n            node {\n              id\n              buyTax\n              buyTokenomics\n              contract\n              decimals\n              description\n              extraLinks\n              slug\n              name\n              sellTax\n              sellTokenomics\n              telegram\n              ticker\n              totalSupply\n              twitter\n              tokenImage {\n                url\n              }\n              tokenLogo {\n                url\n              }\n              catchPhrase\n              isHot\n              isMain\n              isTrending\n              isLaunched\n            }\n          }\n        }\n      }\n         \n    `;\n  const results = await request(graphqlApi, query);\n  return results.tokensConnection.edges;\n};\nexport const getTokenInfo = async slug => {\n  const query = gql`\n    query GetTokenInfo($slug) {\n        token(where: {slug: $slug}) {\n          id\n          buyTax\n          buyTokenomics\n          contract\n          decimals\n          description\n          extraLinks\n          slug\n          name\n          sellTax\n          sellTokenomics\n          telegram\n          ticker\n          totalSupply\n          twitter\n          tokenImage {\n            url\n          }\n          tokenLogo {\n            url\n          }\n          catchPhrase\n          isHot\n          isMain\n          isTrending\n          isLaunched\n        }\n      }\n         \n    `;\n  const results = await request(graphqlApi, query, {\n    slug\n  });\n  return results.token;\n};","map":{"version":3,"sources":["C:/Users/david/OneDrive/Desktop/neftify/services/index.js"],"names":["request","gql","graphqlApi","process","env","NEXT_PUBLIC_GRAPHCMS_ENDPOINT","getToken","query","results","tokensConnection","edges","getTokenInfo","slug","token"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,GAAlB,QAA6B,iBAA7B;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,6BAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,QAAMC,KAAK,GAAGN,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KApCE;AAsCA,QAAMO,OAAO,GAAG,MAAMR,OAAO,CAACE,UAAD,EAAaK,KAAb,CAA7B;AACA,SAAOC,OAAO,CAACC,gBAAR,CAAyBC,KAAhC;AACD,CAzCM;AA4CP,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAP,IAAgB;AAC1C,QAAML,KAAK,GAAGN,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAhCE;AAkCA,QAAMO,OAAO,GAAG,MAAMR,OAAO,CAACE,UAAD,EAAaK,KAAb,EAAoB;AAAEK,IAAAA;AAAF,GAApB,CAA7B;AAEA,SAAOJ,OAAO,CAACK,KAAf;AACD,CAtCM","sourcesContent":["import { request, gql } from 'graphql-request';\r\n\r\nconst graphqlApi = process.env.NEXT_PUBLIC_GRAPHCMS_ENDPOINT;\r\n\r\nexport const getToken = async () => {\r\n  const query = gql`\r\n    query TokenQuery {\r\n        tokensConnection {\r\n          edges {\r\n            node {\r\n              id\r\n              buyTax\r\n              buyTokenomics\r\n              contract\r\n              decimals\r\n              description\r\n              extraLinks\r\n              slug\r\n              name\r\n              sellTax\r\n              sellTokenomics\r\n              telegram\r\n              ticker\r\n              totalSupply\r\n              twitter\r\n              tokenImage {\r\n                url\r\n              }\r\n              tokenLogo {\r\n                url\r\n              }\r\n              catchPhrase\r\n              isHot\r\n              isMain\r\n              isTrending\r\n              isLaunched\r\n            }\r\n          }\r\n        }\r\n      }\r\n         \r\n    `;\r\n\r\n  const results = await request(graphqlApi, query);\r\n  return results.tokensConnection.edges;\r\n}\r\n\r\n\r\nexport const getTokenInfo = async (slug) => {\r\n  const query = gql`\r\n    query GetTokenInfo($slug) {\r\n        token(where: {slug: $slug}) {\r\n          id\r\n          buyTax\r\n          buyTokenomics\r\n          contract\r\n          decimals\r\n          description\r\n          extraLinks\r\n          slug\r\n          name\r\n          sellTax\r\n          sellTokenomics\r\n          telegram\r\n          ticker\r\n          totalSupply\r\n          twitter\r\n          tokenImage {\r\n            url\r\n          }\r\n          tokenLogo {\r\n            url\r\n          }\r\n          catchPhrase\r\n          isHot\r\n          isMain\r\n          isTrending\r\n          isLaunched\r\n        }\r\n      }\r\n         \r\n    `;\r\n\r\n  const results = await request(graphqlApi, query, { slug });\r\n\r\n  return results.token;\r\n}"]},"metadata":{},"sourceType":"module"}